/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.ws1314.a08;

import utilities.DatenImport;
import utilities.DatenExport;
import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import utilities.UniversalChangeListener;

/**
 *
 * @author agribu
 */
public class Fenster extends javax.swing.JFrame {

    /**
     * Creates new form Aufgabe06
     */
    public Fenster() {
        initComponents();
        postInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dpInhalt = new javax.swing.JDesktopPane();
        ifWeinAufnehmen = new javax.swing.JInternalFrame();
        tpWeinAufnehmenTabs = new javax.swing.JTabbedPane();
        ifKundeAnlegen = new javax.swing.JInternalFrame();
        tpKundeAnlegenTabs = new javax.swing.JTabbedPane();
        mbMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        costumerMenu = new javax.swing.JMenu();
        addCostumerMenuItem = new javax.swing.JMenuItem();
        editCostumerMenuItem = new javax.swing.JMenuItem();
        deleteCostumerMenuItem = new javax.swing.JMenuItem();
        wineMenu = new javax.swing.JMenu();
        addWineMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        infoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        ifWeinAufnehmen.setClosable(true);
        ifWeinAufnehmen.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        ifWeinAufnehmen.setIconifiable(true);
        ifWeinAufnehmen.setMaximizable(true);
        ifWeinAufnehmen.setResizable(true);
        ifWeinAufnehmen.setTitle("Wein aufnehmen");
        ifWeinAufnehmen.setVisible(false);

        javax.swing.GroupLayout ifWeinAufnehmenLayout = new javax.swing.GroupLayout(ifWeinAufnehmen.getContentPane());
        ifWeinAufnehmen.getContentPane().setLayout(ifWeinAufnehmenLayout);
        ifWeinAufnehmenLayout.setHorizontalGroup(
            ifWeinAufnehmenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpWeinAufnehmenTabs)
        );
        ifWeinAufnehmenLayout.setVerticalGroup(
            ifWeinAufnehmenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpWeinAufnehmenTabs)
        );

        dpInhalt.add(ifWeinAufnehmen);
        ifWeinAufnehmen.setBounds(20, 10, 670, 490);

        ifKundeAnlegen.setTitle("Kunde anlegen");
        ifKundeAnlegen.setVisible(false);

        javax.swing.GroupLayout ifKundeAnlegenLayout = new javax.swing.GroupLayout(ifKundeAnlegen.getContentPane());
        ifKundeAnlegen.getContentPane().setLayout(ifKundeAnlegenLayout);
        ifKundeAnlegenLayout.setHorizontalGroup(
            ifKundeAnlegenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpKundeAnlegenTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        ifKundeAnlegenLayout.setVerticalGroup(
            ifKundeAnlegenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpKundeAnlegenTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
        );

        dpInhalt.add(ifKundeAnlegen);
        ifKundeAnlegen.setBounds(40, 30, 640, 470);

        fileMenu.setMnemonic('D');
        fileMenu.setText("Datei");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setMnemonic('f');
        openMenuItem.setText("Öffnen");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setMnemonic('S');
        saveMenuItem.setText("Speichern");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAsMenuItem.setMnemonic('u');
        saveAsMenuItem.setText("Speichern unter...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/exit.png"))); // NOI18N
        exitMenuItem.setMnemonic('B');
        exitMenuItem.setText("Beenden");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mbMenu.add(fileMenu);

        editMenu.setMnemonic('B');
        editMenu.setText("Bearbeiten");
        mbMenu.add(editMenu);

        costumerMenu.setMnemonic('K');
        costumerMenu.setText("Kunden");

        addCostumerMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        addCostumerMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/add.png"))); // NOI18N
        addCostumerMenuItem.setMnemonic('A');
        addCostumerMenuItem.setText("Aufnehmen");
        addCostumerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCostumerMenuItemActionPerformed(evt);
            }
        });
        costumerMenu.add(addCostumerMenuItem);

        editCostumerMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        editCostumerMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/stock_properties.png"))); // NOI18N
        editCostumerMenuItem.setMnemonic('e');
        editCostumerMenuItem.setText("Ändern");
        editCostumerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCostumerMenuItemActionPerformed(evt);
            }
        });
        costumerMenu.add(editCostumerMenuItem);

        deleteCostumerMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        deleteCostumerMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/edit-delete.png"))); // NOI18N
        deleteCostumerMenuItem.setMnemonic('L');
        deleteCostumerMenuItem.setText("Löschen");
        costumerMenu.add(deleteCostumerMenuItem);

        mbMenu.add(costumerMenu);

        wineMenu.setMnemonic('W');
        wineMenu.setText("Wein");

        addWineMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        addWineMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/add.png"))); // NOI18N
        addWineMenuItem.setMnemonic('A');
        addWineMenuItem.setText("Aufnehmen");
        addWineMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWineMenuItemActionPerformed(evt);
            }
        });
        wineMenu.add(addWineMenuItem);

        mbMenu.add(wineMenu);

        helpMenu.setMnemonic('?');
        helpMenu.setText("?");

        infoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        infoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/icons/help-faq.png"))); // NOI18N
        infoMenuItem.setMnemonic('I');
        infoMenuItem.setText("Info");
        infoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(infoMenuItem);

        mbMenu.add(helpMenu);

        setJMenuBar(mbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpInhalt, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpInhalt, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.schliessfeldBetaetigt();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void addCostumerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCostumerMenuItemActionPerformed
        this.ifKundeAnlegen.setVisible(true);
        this.tpKundeAnlegenTabs.addTab("Anlegen", pKundeAnlegen);
    }//GEN-LAST:event_addCostumerMenuItemActionPerformed

    private void editCostumerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCostumerMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editCostumerMenuItemActionPerformed

    private void addWineMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWineMenuItemActionPerformed
        this.ifWeinAufnehmen.setVisible(true);
        this.tpWeinAufnehmenTabs.addTab("Aufnehmen", pWeinAufnehmen);
        this.tpWeinAufnehmenTabs.addTab("Trinkreife", pWeinDiagramm);
    }//GEN-LAST:event_addWineMenuItemActionPerformed

    private void infoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infoMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.schliessfeldBetaetigt();
    }//GEN-LAST:event_formWindowClosing

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        this.openFile("");
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        this.fileSaveAs("");
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void postInitComponents() {
        pWeinAufnehmen = new WeinAufnehmen();
        pWeinDiagramm = new WeinDiagramm();
        pKundeAnlegen = new KundeAnlegen();

        tpWeinAufnehmenTabs.addTab("Aufnehmen", pWeinAufnehmen);
        tpWeinAufnehmenTabs.addTab("Trinkreife", pWeinDiagramm);
        tpKundeAnlegenTabs.addTab("Anlegen", pKundeAnlegen);

        this.pWeinAufnehmen.setDia(pWeinDiagramm);
        this.pWeinDiagramm.setWeinAufnehmen(pWeinAufnehmen);
        this.pWeinAufnehmen.setFenster(this);
        this.pKundeAnlegen.setFenster(this);

        this.hmDataMap.put("Weine", new ArrayList<ArrayList<String>>());
        this.hmDataMap.put("Kunden", new ArrayList<ArrayList<String>>());
    }

    public void closeWeinAufnehmen(UniversalChangeListener ucl) {
        this.ucl = ucl;

        if (beenden() != JOptionPane.YES_OPTION) {
            return;
        }
        this.ifWeinAufnehmen.setVisible(false);
        clearAll();
    }

    private void schliessfeldBetaetigt() {
        if (beenden() == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    private int beenden() {
        int antwort = JOptionPane.showConfirmDialog(
                this, "Wollen Sie wirklich das Fenster schließen?", "Fenster schließen.",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        return antwort;
    }

    private void openFile(String pfad) {
        JFileChooser chooser;
        if (pfad == null) {
            pfad = System.getProperty("user.home");
        }
        File file = new File(pfad.trim());

        chooser = new JFileChooser(pfad);
        chooser.setDialogTitle("Datei öffnen...");
        FileNameExtensionFilter plainFilter = new FileNameExtensionFilter(
                "Wein Kunden Daten: *.wkd", "wkd");
        chooser.removeChoosableFileFilter(chooser.getAcceptAllFileFilter());
        chooser.setFileFilter(plainFilter);
        int result = chooser.showOpenDialog(this);
        chooser.setVisible(true);

        if (result == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            new DatenImport(file, this);
            chooser.setVisible(false);
        }
    }

    private boolean fileSaveAs(String pfad) {
        JFileChooser chooser;
        if (pfad == null) {
            pfad = System.getProperty("user.home");
        }
        File file = new File(pfad.trim());

        chooser = new JFileChooser(pfad);
        chooser.setDialogType(JFileChooser.SAVE_DIALOG);
        FileNameExtensionFilter plainFilter = new FileNameExtensionFilter(
                "Wein Kunden Daten: *.wkd", "wkd");
        chooser.removeChoosableFileFilter(chooser.getAcceptAllFileFilter());
        chooser.setFileFilter(plainFilter);
        chooser.setDialogTitle("Speichern unter...");
        chooser.setVisible(true);

        int result = chooser.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            if (!file.getName().endsWith(".wkd") && !file.getName().contains(".")) {
                file = new File(file.getAbsolutePath() + ".wkd");
            }
            if (file.exists()) {
                int antwort = JOptionPane.showConfirmDialog(
                        rootPane,
                        "Wollen Sie die Datei " + file.getName() + " wirklich überschreiben?",
                        "Datei überschreiben",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (antwort == JOptionPane.YES_OPTION) {
                    this.dataExport = new DatenExport(hmDataMap, file, this);
                    this.dataExport.saveToFile();
                }
            } else {
                this.dataExport = new DatenExport(hmDataMap, file, this);
                this.dataExport.saveToFile();
            }
            chooser.setVisible(false);
            return true;
        }
        chooser.setVisible(false);
        return false;
    }

    public void clearAll() {
        dim = this.getSize();

        this.getContentPane().removeAll();
        initComponents();
        //pWeinAufnehmen.postInitComponents();

        this.setSize(dim);
        this.ucl.reset();
    }

    public void setDataMap(String identifier, ArrayList<String> al) {
//        System.out.println("Fenster.java:setDataMap:\n" + identifier + "@" + al + "\n\n");
        hmDataMap.get(identifier).add(al);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addCostumerMenuItem;
    private javax.swing.JMenuItem addWineMenuItem;
    private javax.swing.JMenu costumerMenu;
    private javax.swing.JMenuItem deleteCostumerMenuItem;
    private javax.swing.JDesktopPane dpInhalt;
    private javax.swing.JMenuItem editCostumerMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JInternalFrame ifKundeAnlegen;
    private javax.swing.JInternalFrame ifWeinAufnehmen;
    private javax.swing.JMenuItem infoMenuItem;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTabbedPane tpKundeAnlegenTabs;
    private javax.swing.JTabbedPane tpWeinAufnehmenTabs;
    private javax.swing.JMenu wineMenu;
    // End of variables declaration//GEN-END:variables

    private Dimension dim;
    private WeinAufnehmen pWeinAufnehmen;
    private WeinDiagramm pWeinDiagramm;
    private KundeAnlegen pKundeAnlegen;
    private UniversalChangeListener ucl;
    private HashMap<String, ArrayList<ArrayList<String>>> hmDataMap = new HashMap<>();
    private DatenExport dataExport;

}
