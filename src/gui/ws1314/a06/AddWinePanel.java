/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.ws1314.a06;

import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.JTextComponent;
import javax.swing.text.PlainDocument;

/**
 *
 * @author agribu
 */
public class AddWinePanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public AddWinePanel() {
        initComponents();
        postInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        brGroup = new javax.swing.ButtonGroup();
        lbBestellNr = new javax.swing.JLabel();
        tfBestellNr = new javax.swing.JTextField();
        lbJahrgang = new javax.swing.JLabel();
        tfJahrgang = new javax.swing.JTextField();
        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lbFarbe = new javax.swing.JLabel();
        rbWeiss = new javax.swing.JRadioButton();
        rbRot = new javax.swing.JRadioButton();
        rbRose = new javax.swing.JRadioButton();
        lbRebsorte = new javax.swing.JLabel();
        cbRebsorteSelect1 = new javax.swing.JComboBox();
        cbRebsorteSelect2 = new javax.swing.JComboBox();
        cbRebsorteSelect3 = new javax.swing.JComboBox();
        lbAnbaugebiet = new javax.swing.JLabel();
        cbAnbaugebietSelect1 = new javax.swing.JComboBox();
        cbAnbaugebietSelect2 = new javax.swing.JComboBox();
        lbAlkohol = new javax.swing.JLabel();
        cbAlkohol = new javax.swing.JComboBox();
        lbLagerfaehigkeit = new javax.swing.JLabel();
        tfLagerfaehigkeit = new javax.swing.JTextField();
        tfFlaschenpreis = new javax.swing.JTextField();
        lbFlaschenGr = new javax.swing.JLabel();
        lbEuro = new javax.swing.JLabel();
        cbFlaschenGr = new javax.swing.JComboBox();
        lbFlaschenpreis = new javax.swing.JLabel();
        btSave = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        lbBestellNr.setText("Bestellnummer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbBestellNr, gridBagConstraints);

        tfBestellNr.setToolTipText("Die Bestellnummer umfasst 12 Dezimalzahlen im Format 123456789012.");
        tfBestellNr.setAlignmentX(0.0F);
        tfBestellNr.setMinimumSize(new java.awt.Dimension(220, 24));
        tfBestellNr.setPreferredSize(new java.awt.Dimension(120, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(tfBestellNr, gridBagConstraints);

        lbJahrgang.setText("Jahrgang");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbJahrgang, gridBagConstraints);

        tfJahrgang.setToolTipText("Der Jahrgang umfasst 4 Dezimalzahlen im Format: 2001.");
        tfJahrgang.setAlignmentX(0.0F);
        tfJahrgang.setMinimumSize(new java.awt.Dimension(100, 24));
        tfJahrgang.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(tfJahrgang, gridBagConstraints);

        lbName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbName, gridBagConstraints);

        tfName.setToolTipText("Der Name kann beliebig gewählt werden.");
        tfName.setAlignmentX(0.0F);
        tfName.setMinimumSize(new java.awt.Dimension(220, 24));
        tfName.setPreferredSize(new java.awt.Dimension(220, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(tfName, gridBagConstraints);

        lbFarbe.setText("Farbe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbFarbe, gridBagConstraints);

        brGroup.add(rbWeiss);
        rbWeiss.setText("Weiß");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(rbWeiss, gridBagConstraints);

        brGroup.add(rbRot);
        rbRot.setText("Rot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(rbRot, gridBagConstraints);

        brGroup.add(rbRose);
        rbRose.setText("Rose");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(rbRose, gridBagConstraints);

        lbRebsorte.setText("Rebsorte");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbRebsorte, gridBagConstraints);

        cbRebsorteSelect1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRebsorteSelect1.setAlignmentX(0.0F);
        cbRebsorteSelect1.setMinimumSize(new java.awt.Dimension(100, 24));
        cbRebsorteSelect1.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(cbRebsorteSelect1, gridBagConstraints);

        cbRebsorteSelect2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRebsorteSelect2.setMinimumSize(new java.awt.Dimension(100, 24));
        cbRebsorteSelect2.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(cbRebsorteSelect2, gridBagConstraints);

        cbRebsorteSelect3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRebsorteSelect3.setMinimumSize(new java.awt.Dimension(100, 24));
        cbRebsorteSelect3.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(cbRebsorteSelect3, gridBagConstraints);

        lbAnbaugebiet.setText("Anbaugebiet");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbAnbaugebiet, gridBagConstraints);

        cbAnbaugebietSelect1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAnbaugebietSelect1.setAlignmentX(0.0F);
        cbAnbaugebietSelect1.setMinimumSize(new java.awt.Dimension(100, 24));
        cbAnbaugebietSelect1.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(cbAnbaugebietSelect1, gridBagConstraints);

        cbAnbaugebietSelect2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAnbaugebietSelect2.setMinimumSize(new java.awt.Dimension(100, 24));
        cbAnbaugebietSelect2.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(cbAnbaugebietSelect2, gridBagConstraints);

        lbAlkohol.setText("Alkoholgehalt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbAlkohol, gridBagConstraints);

        cbAlkohol.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAlkohol.setAlignmentX(0.0F);
        cbAlkohol.setMinimumSize(new java.awt.Dimension(100, 24));
        cbAlkohol.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(cbAlkohol, gridBagConstraints);

        lbLagerfaehigkeit.setText("Lagerfähigkeit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbLagerfaehigkeit, gridBagConstraints);

        tfLagerfaehigkeit.setToolTipText("Die Lagerfähigkeit beschreibt das Jahr, bis zu dem der Wein gelagert werden kann. Format: 2013.");
        tfLagerfaehigkeit.setAlignmentX(0.0F);
        tfLagerfaehigkeit.setMinimumSize(new java.awt.Dimension(100, 24));
        tfLagerfaehigkeit.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(tfLagerfaehigkeit, gridBagConstraints);

        tfFlaschenpreis.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfFlaschenpreis.setToolTipText("Der Preis umfasst eine Ganzzahl mit zwei Nachkommestellen, im Format: 23,22.");
        tfFlaschenpreis.setAlignmentX(0.0F);
        tfFlaschenpreis.setMinimumSize(new java.awt.Dimension(100, 24));
        tfFlaschenpreis.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(tfFlaschenpreis, gridBagConstraints);

        lbFlaschenGr.setText("Flaschengröße");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbFlaschenGr, gridBagConstraints);

        lbEuro.setText("€");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbEuro, gridBagConstraints);

        cbFlaschenGr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFlaschenGr.setAlignmentX(0.0F);
        cbFlaschenGr.setMinimumSize(new java.awt.Dimension(100, 24));
        cbFlaschenGr.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(cbFlaschenGr, gridBagConstraints);

        lbFlaschenpreis.setText("Flaschenpreis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lbFlaschenpreis, gridBagConstraints);

        btSave.setText("Speichern");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        add(btSave, gridBagConstraints);

        btCancel.setText("Abbrechen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        add(btCancel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void postInitComponents() {
        this.hmFormat = setFormat();
    }

    private HashMap setFormat() {
        HashMap<Component, ArrayList<String>> hm = new HashMap<>();
        hm.put(tfBestellNr, new ArrayList<String>());
        hm.get(tfBestellNr).add(0, "\\d{12}"); //Format for InputVerifier
        hm.get(tfBestellNr).add(1, "\\d"); //Format for Document
        
        hm.put(tfJahrgang, new ArrayList<String>());
        hm.get(tfJahrgang).add(0, "");
        hm.get(tfJahrgang).add(1, "\\d");
        
        hm.put(tfName, new ArrayList<String>());
        hm.get(tfName).add(0, "[\\w \\s]");
        hm.get(tfName).add(1, "[\\w \\s]");
        
        hm.put(tfLagerfaehigkeit, new ArrayList<String>());
        hm.get(tfLagerfaehigkeit).add(0, "");
        hm.get(tfLagerfaehigkeit).add(1, "\\d");
        
        hm.put(tfFlaschenpreis, new ArrayList<String>());
        hm.get(tfFlaschenpreis).add(0, "^\\d+(,)?\\d{0,2}$|,");
        hm.get(tfFlaschenpreis).add(1, "^\\d+(,)?\\d{0,2}$|,");

        for (Component c : hm.keySet()) {
            ((JTextComponent) c).setInputVerifier(
                    new UniversalInputVerifier(hm.get(c).get(0)));
            ((JTextComponent) c).setDocument(
                    new UniversalDocument(hm.get(c).get(1)));
        }

        return hm;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup brGroup;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btSave;
    private javax.swing.JComboBox cbAlkohol;
    private javax.swing.JComboBox cbAnbaugebietSelect1;
    private javax.swing.JComboBox cbAnbaugebietSelect2;
    private javax.swing.JComboBox cbFlaschenGr;
    private javax.swing.JComboBox cbRebsorteSelect1;
    private javax.swing.JComboBox cbRebsorteSelect2;
    private javax.swing.JComboBox cbRebsorteSelect3;
    private javax.swing.JLabel lbAlkohol;
    private javax.swing.JLabel lbAnbaugebiet;
    private javax.swing.JLabel lbBestellNr;
    private javax.swing.JLabel lbEuro;
    private javax.swing.JLabel lbFarbe;
    private javax.swing.JLabel lbFlaschenGr;
    private javax.swing.JLabel lbFlaschenpreis;
    private javax.swing.JLabel lbJahrgang;
    private javax.swing.JLabel lbLagerfaehigkeit;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRebsorte;
    private javax.swing.JRadioButton rbRose;
    private javax.swing.JRadioButton rbRot;
    private javax.swing.JRadioButton rbWeiss;
    private javax.swing.JTextField tfBestellNr;
    private javax.swing.JTextField tfFlaschenpreis;
    private javax.swing.JTextField tfJahrgang;
    private javax.swing.JTextField tfLagerfaehigkeit;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
    
    // Post-Adding Variables
    private HashMap hmFormat;

    // Inner Classes
    class UniversalDocument extends PlainDocument {
        private final String format;
        
        public UniversalDocument(String format) {
            this.format = format;
        }
        
        @Override
        public void insertString(int offs, String s, AttributeSet a) throws BadLocationException {
            for (int i = 0; i < s.length(); i++) {
                if (!s.matches(format)) {
                    Toolkit.getDefaultToolkit().beep();
                    System.out.println("Visual Bell: Ungültiges Zeichen!");
                    return;
                }
            }
            super.insertString(offs, s, a);
        }
    }    

    class UniversalInputVerifier extends InputVerifier {

        private final String allowedChars;

        public UniversalInputVerifier(String allowedChars) {
            this.allowedChars = allowedChars;
        }

        @Override
        public boolean verify(JComponent input) {
            if (((JTextComponent) input).getText().matches(allowedChars)) {
                input.setBackground(Color.white);
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Bitte das Format einhalten!\n"
                        + ((JTextComponent) input).getToolTipText(),
                        "Formatfehler!", JOptionPane.WARNING_MESSAGE);

                input.setBackground(Color.decode("#FAA598"));

                return false;
            }
        }

    }
}
